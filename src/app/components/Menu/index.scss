@import "../../../styles/variables";
@import "../../../styles/mixins";

.menu_container {
  width: fit-content;
  height: 100%;
  display: flex;
  justify-content: flex-start;
  gap: 4.5rem;
  @include respond-to("small_devices") {
    gap: 0rem;
  }

  &.hidden-on-small {
    // visibility:  hidden;
    // width: 0%;
    // height: 0%;
    // position: absolute;
    // left: 0;
    @include respond-to("small_devices") {
      visibility: visible;
      width: 100%;
      height: 100vh;
      flex-direction: column;
      position: absolute;
      right: 0px;
      top: 120px;
      background-color: $white;
      padding: 17px 20px 17px 35px;
      font-size: 50px;
      font-size: $primary-fonts;
    }
  }

  &.vertical {
    flex-direction: column;
  }

  &_link {
    position: relative;
    text-decoration: none;
    width: fit-content;
    padding: 0 0.2rem;
    color: $black;
    display: grid;
    place-items: center;
    font-weight: 500;
    transition: 0.3s all ease-in-out;

    &::after {
      content: "";
      position: absolute;
      bottom: -20px;
      height: 2px;
      background-color: $black;
      border-radius: 10%;
      animation: rightToLeft 0.3s forwards;
      width: 100%;
      @include respond-to("small_devices") {
        font-size: 14px;
        content: "0" counter(count);
        counter-increment: count;
        color: $black;
        font-weight: 400;
        position: absolute;
        background-color: none;
        left: 0;
        bottom: 35px;
        transform: rotate(270deg);
        font-family: $primary-fonts;
      }
    }

    &:not(.active) {
      &::after {
        content: "";
        width: 0%;
        @include respond-to("small_devices") {
          content: "0" counter(count);
        }
      }
    }

    &:hover {
      &::after {
        animation: leftToRight 0.3s forwards;
        width: 100%;
      }
    }

    &.active {
      &::after {
        animation: leftToRight 0.3s forwards;
      }
    }
  }
}
.counter-row {
  counter-reset: count;
}

